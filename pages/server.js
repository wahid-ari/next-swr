import Head from 'next/head'
import useSWR, { SWRConfig } from "swr";
import Image from 'next/image';
import Code from '@components/Code';
import Navbar from '@components/Navbar';

const fetcher = (url) => fetch(url).then(res => res.json())
// const API = "https://api.github.com/repos/vercel/next.js";
const API = `${process.env.API_URL}/api/repos/nextjs`;

export async function getServerSideProps() {
  const repoInfo = await fetcher(API);
  return {
    props: {
      fallback: {
        [API]: repoInfo
      }
    }
  };
}

export default function Server({ fallback }) {
  return (
    <SWRConfig value={{ fallback }}>
      <Page />
    </SWRConfig>
  );
}

function Page() {

  const { data, error } = useSWR(API)

  if (error) return <div>failed to load</div>
  if (!data) return <div>loading...</div>

  return (
    <>
      <Head>
        <title>ServerSide SWR</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="dark:bg-neutral-900 min-h-screen pb-8">
        
        <Navbar/>

        <div className="max-w-5xl px-4 mx-auto pt-4 class">
          <h1 className="dark:text-white text-2xl font-semibold pb-4">ServerSide SWR</h1>
          {/* <div className="border dark:border-neutral-700 p-4 rounded my-6">
            <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer block mb-4" href="https://api.github.com/repos/vercel/next.js" target="_blank" rel="noreferrer">https://api.github.com/repos/vercel/next.js</a>
            <div className="space-y-1.5 dark:text-white">
              <div className="relative w-20 h-20 mb-2">
                <Image alt="Image" className="rounded" layout="fill" src={data.owner.avatar_url} />
              </div>
              <p>Name : {data.name}</p>
              <p>Full Name : {data.full_name}</p>
              <p>Language : {data.language}</p>
              <p>Homepage : {data.homepage ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.homepage} target="_blank" rel="noreferrer">{data.homepage}</a> : "-"}</p>
              <p>Description : {data.description}</p>
              <p>Repo URL : {data.html_url ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.html_url} target="_blank" rel="noreferrer">{data.html_url}</a> : "-"}</p>
              <p>License : {data.license.name}</p>
              <p>Owner : {data.owner.login}</p>
              <p>Owner URL : {data.owner.html_url ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.owner.html_url} target="_blank" rel="noreferrer">{data.owner.html_url}</a> : "-"}</p>
            </div>
          </div> */}
          <div className="border dark:border-neutral-700 p-4 rounded my-6">
            <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer block mb-4 break-all" href={data.api} target="_blank" rel="noreferrer">{data.api}</a>
            <div className="space-y-1.5 dark:text-white">
              <div className="relative w-20 h-20 mb-2">
                <Image alt="Image" className="rounded" layout="fill" src={data.image} />
              </div>
              <p>Name : {data.name}</p>
              <p>Full Name : {data.full_name}</p>
              <p>Language : {data.language}</p>
              <p>Homepage : {data.homepage ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.homepage} target="_blank" rel="noreferrer">{data.homepage}</a> : "-"}</p>
              <p>Description : {data.description}</p>
              <p>Repo URL : {data.repo_url ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.repo_url} target="_blank" rel="noreferrer">{data.repo_url}</a> : "-"}</p>
              <p>License : {data.license}</p>
              <p>Owner : {data.owner}</p>
              <p>Owner URL : {data.owner_url ? <a className="text-blue-500 hover:text-blue-600 transition-all cursor-pointer" href={data.owner_url} target="_blank" rel="noreferrer">{data.owner_url}</a> : "-"}</p>
            </div>
          </div>
          <Code name="pages/server" code={`import useSWR, { SWRConfig } from "swr";

const fetcher = (url) => fetch(url).then(res => res.json())
const API = "https://api.github.com/repos/vercel/next.js";

export async function getServerSideProps() {
  const repoInfo = await fetcher(API);
  return {
    props: {
      fallback: {
        [API]: repoInfo
      }
    }
  };
}

export default function Server({ fallback }) {
  return (
    <SWRConfig value={{ fallback }}>
      <Page />
    </SWRConfig>
  );
}

function Page() {
  const { data, error } = useSWR(API)
  if (error) return <div>failed to load</div>
  if (!data) return <div>loading...</div>
  return (
    <div>
      <Image alt="Image" src={data.image} />
      <p>Name : {data.name}</p>
      <p>Full Name : {data.full_name}</p>
      <p>Language : {data.language}</p>
      <p>Homepage : {data.homepage}</p>
      <p>Description : {data.description}</p>
      <p>Repo URL : {data.repo_url}</p>
      <p>License : {data.license}</p>
      <p>Owner : {data.owner}</p>
      <p>Owner URL : {data.owner_url}</p>
    </div>
  )
}`} />
        </div>
      </main >
    </>
  )
}
